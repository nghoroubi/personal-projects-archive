// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package grpc

import (
	"amadeus-go/pkg/endpoint"
	pb "amadeus-go/pkg/transport/grpc/pb"

	"github.com/go-kit/kit/transport/grpc"
)

// NewGRPCServer makes a set of endpoints available as a gRPC AddServer
type grpcServer struct {
	search         grpc.Handler
	airBook        grpc.Handler
	cancelPNR      grpc.Handler
	airBookingData grpc.Handler
	airRevalidate  grpc.Handler
	healthCheck    grpc.Handler
	aieRules       grpc.Handler
}

func NewGRPCServer(endpoints endpoint.Endpoints, options map[string][]grpc.ServerOption) pb.ServiceServer {
	return &grpcServer{
		cancelPNR:      makeCancelPNRHandler(endpoints, options["CancelPNR"]),
		airBookingData: makeAirBookingDataHandler(endpoints, options["AirBookingData"]),
		healthCheck:    makeHealthCheckHandler(endpoints, options["HealthCheck"]),
		airBook:        makeAirBookHandler(endpoints, options["AirBook"]),
		search:         makeSearchHandler(endpoints, options["AirLowFareSearch"]),
		airRevalidate:  makeAirRevalidateHandler(endpoints, options["AirRevalidate"]),
		aieRules:       makeAirRulesHandler(endpoints, options["AirRules"]),
	}
}